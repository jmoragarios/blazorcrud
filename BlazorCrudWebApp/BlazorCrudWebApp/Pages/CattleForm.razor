@page "/cattleform";
@page "/cattleform/{Id:int}";

@using System.Net.Http;
@using System.Net.Http.Json;
@using Data;

@inject HttpClient Http;
@inject NavigationManager NavigationManager;
<h3>CattleForm</h3>

<EditForm Model="@oCattle">
    <div class="container-fluid">
        <div class="form-group row mb-1">
            <label class="col-sm-3">Name</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="@oCattle.Name"></InputText>
            </div>
        </div>
        <div class="form-group row mb-1">
            <label class="col-sm-3">Breed</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="@oCattle.Breed"></InputText>
            </div>
        </div>
        <div class="form-group row mb-1">
            <div class="col-sm-12">
                <button class="btn btn-primary" @onclick="Save">Save</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    Data.Cattle oCattle = new Data.Cattle();
    Response<object> oResponse = new Response<object>();
    Response<Data.Cattle> oCattleResponse = new Response<Cattle>();
    public string Url = "/api/Cattle";

    private async Task Save()
    {
        if (Id != 0)
        {
            var response = await Http.PutAsJsonAsync<Data.Cattle>(Url, oCattle);
            oResponse = response.Content.ReadFromJsonAsync<Response<object>>().Result;
        }
        else
        {
            var response = await Http.PostAsJsonAsync<object>(Url, oCattle);
            oResponse = response.Content.ReadFromJsonAsync<Response<object>>().Result;
        }

        NavigationManager.NavigateTo("/cattles");
    }

    protected override async Task OnInitializedAsync()
    {
        if(Id != 0)
        {
            oCattleResponse = await Http.GetFromJsonAsync<Response<Data.Cattle>>($"{Url}/{Id}");
            oCattle = oCattleResponse.Data;
        }
    }

}
